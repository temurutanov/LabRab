////////////////////////////////////////////
///Задача №1: напишите функцию, которая возвращает наибольший из трех целочисленных аргументов.
#include <iostream>

using namespace std;

int maximum(int a, int b, int c)
{
 int max = a;
 if (b > max)
  max = b;
 if (c > max)
  max = c;
 return max;
}

void main()
{
 setlocale(LC_ALL, "Russian");
 int int_1, int_2, int_3, max;
 cout << "Введите 3 целых числа\n";
 cin >> int_1;
 cin >> int_2;
 cin >> int_3;
 max = maximum(int_1, int_2, int_3);
 cout << int_1 << " " << int_2 << " " << int_3 << " max = " << max << endl;
 system("pause");
}

///////////////////////////////////////////
///Задача №2: напишите функцию, которая имеет два аргумента int: нижний предел и верхний предел. Функция должна читать целое число из входных данных. Если это число выходит за указанные пределы, функция должна снова вывести меню (используя функцию из части а), чтобы повторно предложить пользователю ввести новое значение. Если введенное целое значение попадает в рамки пределов, функция должна возвратить его в вызывающую функцию. Ввод нецелочисленного значения должен приводить к возвращению функцией значения, соответствующего выходу из программы. Часть а: Напишите функцию, которая выводит на экран меню из четырех пронумерованных вариантов и предлагает выбрать один из них. Ввод верхнего и нижнего предела, возможность изменить входящее целое число повторным вводом с клавиатуры и выход из меню и программы).

#include <iostream>
#include <iomanip>
#include <string>
using namespace std;

int nine(int enter)
{
    int up = 5, down = 0, flag_1 = 1, flag_2 = 1;
    string str;
    while (flag_1)
    {
        cout << "Выберите один из следующих вариантов:\n1) копировать файлы" << setw(30) << "2) переместить файлы\n";
        cout << "3) удалить файлы" << setw(34) << "4) выйти из программы\n";
        cin >> str;
        for (int i = 0; i < str.length(); i++)
        {
            if (!isdigit(str[i]))
            {
                enter = 4;
                flag_2 = 0;
            }
        }
        if (!flag_2)
        {
            cout << "Введённое значение не является целым числом, таким образом, автоматически\n";
            break;
        }
        enter = stoi(str);
        if (enter < up && enter > down)
            flag_1 = 0;
    }
    return enter;
}

void main()
{
    setlocale(LC_ALL, "Russian");
    int a = 0;
    a = nine(a);
    cout << "Введёное значение = " << a << endl;
    system("pause");
}

/////////////////////////////////////////////
///Задача№3: реализуйте сортировку массива вставками. (массив из целых чисел)
#include <iostream>
#include <string>
#include <cstring>
#include <stdio.h>
#include <string.h>
using namespace std;

void insertionSort(int* arrayPtr, int length) // сортировка вставками
{
	int temp, // временная переменная для хранения значения элемента сортируемого массива
		item; // индекс предыдущего элемента
	for (int counter = 1; counter < length; counter++)
	{
		temp = arrayPtr[counter]; // инициализируем временную переменную текущим значением элемента массива
		item = counter - 1; // запоминаем индекс предыдущего элемента массива
		while (item >= 0 && arrayPtr[item] > temp) // пока индекс не равен 0 и предыдущий элемент массива больше текущего
		{
			arrayPtr[item + 1] = arrayPtr[item]; // перестановка элементов массива
			arrayPtr[item] = temp;
			item--;
		}
	}
}

int main()
{

	setlocale(LC_ALL, "ru");
	int Q = 0;
	cout << "Выберите размер массива" << endl;
	cin >> Q;

	cout << "Введите " << Q << " элементов" << endl;
	int* arr = new int[Q];
	for (int i(0); i < Q; i++)
	{
		cin >> arr[i];
	}

	insertionSort(arr, Q); // вызов функции сортировки вставками

	cout << "Вывод " << Q << " элементов" << endl;
	for (int i(0); i < Q; i++)
	{
		cout << arr[i] << " ";
	}
	delete[] arr;

	system("pause");
}

//////////////////////////////////////////////////////////